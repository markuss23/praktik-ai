services:

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - api/.env
    
    volumes:
      - ./api:/code
    # environment:
    #   DATABASE_URL: postgresql://postgres:example@db:5432/postgres
    #   MINIO_ENDPOINT: minio
    #   MINIO_ACCESS_KEY: root
    #   MINIO_SECRET_KEY: rootroot
    #   MINIO_SECURE: "false"
    #   KEYCLOAK_URL: http://keycloak:7080
    #   KEYCLOAK_REALM: praktikai
    #   KEYCLOAK_CLIENT_ID: praktik-ai-app
    # depends_on:
    #   - db
    #   - minio
    #   - keycloak
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    environment:
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 7080
      KC_HOSTNAME_STRICT_BACKCHANNEL: "true"
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HEALTH_ENABLED: "true"
      KC_LOG_LEVEL: info

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7080/health/ready"]
      interval: 15s
      timeout: 2s
      retries: 15

    command: ["start-dev", "--http-port", "7080", "--https-port", "7443"]

    ports:
      - "7080:7080"
      - "7443:7443"

  db:
    image: postgres
    restart: always
    # set shared memory limit when using docker compose
    shm_size: 128mb
    # or set shared memory limit when deploy via swarm stack
    #volumes:
    #  - type: tmpfs
    #    target: /dev/shm
    #    tmpfs:
    #      size: 134217728 # 128*2^20 bytes = 128Mb
    environment:
      POSTGRES_PASSWORD: example
      POSTGRES_DATABASE: praktik_db

    ports:
      - "5432:5432"

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: root
      MINIO_ROOT_PASSWORD: rootroot
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data

volumes:
  minio-data:
